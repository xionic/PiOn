{"version":3,"file":"simple-modal.umd.js","sources":["simple-modal.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport \"@polymer/paper-dialog/paper-dialog.js\";\n/**\n * @deprecatedApply - required for @apply / invoking @apply css var convention\n */\nimport \"@polymer/polymer/lib/elements/custom-style.js\";\n/**\n * `simple-modal`\n * `A simple modal that ensures accessibility and stack order context appropriately`\n * CSS Variables: ```\n--simple-modal-titlebar-color: #444;\n--simple-modal-titlebar-background: #ddd;\n--simple-modal-header-color: #222;\n--simple-modal-header-background: #ccc;\n--simple-modal-content-container-color: #222;\n--simple-modal-content-container-background: #fff;\n--simple-modal-buttons-color: unset;\n--simple-modal-buttons-background: unset;\n--simple-modal-button-color: var(--simple-modal-buttons-color);\n--simple-modal-button-background: var(--simple-modal-buttons-background-color);\n```\n * @demo ./demo/index.html demo\n * @demo ./demo/css.html styling simple-modal via CSS\n * @demo ./demo/details.html styling simple-modal via event details\n * @demo ./demo/template.html using simple-modal-template\n * @customElement simple-modal\n */\nclass SimpleModal extends LitElement {\n  \n  //styles function\n  static get styles() {\n    return  [\n      css`\n:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\npaper-dialog-scrollable:not(:defined) {\n  display: none;\n}\n\n:host paper-dialog ::slotted(*) {\n  font-size: 14px;\n  width: 100%;\n}\n\n#dialog {\n  display: flex;\n  flex-direction: column;\n  margin: 15px auto;\n  z-index: 1000;\n  height: var(--simple-modal-height, auto);\n  width: var(--simple-modal-width, auto);\n  min-width: var(--simple-modal-min-width, unset);\n  max-width: var(--simple-modal-max-width, unset);\n  min-height: var(--simple-modal-min-height, unset);\n  max-height: var(--simple-modal-max-height, unset);\n  border-radius: 3px;\n}\n\n#titlebar {\n  margin-top: 0;\n  padding: 0px 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: var(--simple-modal-titlebar-color,#444);\n  background-color: var(--simple-modal-titlebar-background,#ddd);\n  border-radius: 3px 3px 0 0;\n  height: 64px;\n  line-height: 64px;\n}\n\n#headerbar {\n  margin: 0;\n  padding: 0 16px;\n  color: var(--simple-modal-header-color, #222);\n  background-color: var(--simple-modal-header-background, #ccc);\n}\n\nh2 {\n  margin-right: 8px;\n  padding: 0;\n  flex: auto;\n  font-size: 18px;\n  line-height: 18px;\n}\n\n#close {\n  top: 0;\n  padding: 10px 0;\n  min-width: unset;\n  text-transform: none;\n  color: var(--simple-modal-titlebar-color,#444);\n  background-color: transparent;\n}\n\n#close iron-icon {\n  width: 16px;\n  height: 16px;\n  color: var(--simple-modal-titlebar-color,#444);\n}\n\n#simple-modal-content {\n  flex-grow: 1;\n  padding: 8px 16px;\n  margin: 0;\n  color: var(--simple-modal-content-container-color, #222);\n  background-color: var(--simple-modal-content-container-background, #fff);\n}\n.buttons {\n  padding: 0;\n  margin: 0;\n  color: var(--simple-modal-buttons-color, unset);\n  background-color: var(--simple-modal-buttons-background, unset);\n}\n.buttons ::slotted(*) {\n  padding: 0;\n  margin: 0;\n  color: var(--simple-modal-button-color,--simple-modal-buttons-color);\n  background-color: var(--simple-modal-button-background,--simple-modal-buttons-background);\n}\n      `\n    ];\n  }\n  // render function\n  render() {\n    return html`\n\n<custom-style>\n  <style>\n  :host paper-dialog ::slotted(*) {\n    @apply --simple-modal-content;\n  }\n\n  #dialog {\n    @apply --simple-modal-dialog;\n  }\n\n  #titlebar {\n    @apply --simple-modal-top;\n  }\n\n  #headerbar {\n    @apply --simple-modal-headerbar;\n  }\n\n  h2 {\n    @apply --simple-modal-title;\n  }\n\n  #close {\n    @apply --simple-modal-close;\n  }\n\n  #close iron-icon {\n    @apply --simple-modal-close-icon;\n  }\n\n  #simple-modal-content {\n    --paper-dialog-scrollable: {\n      padding: 0;\n    }\n    @apply --simple-modal-content-container;\n  }\n  .buttons {\n    @apply --simple-modal-buttons;\n  }\n  .buttons ::slotted(*) {\n    @apply --simple-modal-button;\n  }\n  </style>\n</custom-style>\n<paper-dialog\n  id=\"dialog\"\n  always-on-top\n  aria-describedby=\"simple-modal-content\"\n  aria-label=\"${this._getAriaLabel(this.title)}\"\n  aria-labelledby=\"${this._getAriaLabelledby(this.title)}\"\n  aria-modal=\"true\"\n  role=\"dialog\"\n  ?opened=\"${this.opened}\"\n  @opened-changed=\"${this.openedChangedEvent}\"\n  ?modal=\"${this.modal}\"\n  with-backdrop>\n  <div id=\"titlebar\">\n    <h2 id=\"simple-modal-title\" ?hidden=\"${!this.title}\">${this.title}</h2>\n    <div></div>\n    <paper-button id=\"close\" dialog-dismiss ?hidden=\"${!this.opened}\" label=\"${this.closeLabel}\">\n      <iron-icon aria-hidden=\"true\" icon=\"${this.closeIcon}\"></iron-icon>\n    </paper-button>\n  </div>\n  <div id=\"headerbar\"><slot name=\"header\"></slot></div>\n  <paper-dialog-scrollable id=\"simple-modal-content\">\n    <slot name=\"content\"></slot>\n  </paper-dialog-scrollable>\n  <div class=\"buttons\">\n    <slot name=\"buttons\"></slot>\n  </div>\n</paper-dialog>`;\n  }\n\n  // properties available to the custom element for data binding\n    static get properties() {\n    return {\n  \n  ...super.properties,\n  \n  /**\n   * heading / label of the modal\n   */\n  \"title\": {\n    \"type\": String\n  },\n  /**\n   * open state\n   */\n  \"opened\": {\n    \"type\": Boolean,\n    \"reflect\": true\n  },\n  /**\n   * Close label\n   */\n  \"closeLabel\": {\n    \"attribute\": \"close-label\",\n    \"type\": String\n  },\n  /**\n   * Close icon\n   */\n  \"closeIcon\": {\n    \"type\": String,\n    \"attribute\": \"close-icon\"\n  },\n  /**\n   * The element that invoked this. This way we can track our way back accessibly\n   */\n  \"invokedBy\": {\n    \"type\": Object\n  },\n  /**\n   * support for modal flag\n   */\n  \"modal\": {\n    \"type\": Boolean\n  }\n}\n;\n  }\n\n  /**\n   * convention\n   */\n  static get tag() {\n    return \"simple-modal\";\n  }\n  /**\n   * HTMLElement\n   */\n  constructor() {\n    super();\n    this.title = \"\";\n    this.opened = false;\n    this.closeLabel = \"Close\";\n    this.closeIcon = \"close\";\n    this.modal = false;\n    setTimeout(() => {\n      import(\"@polymer/paper-dialog-scrollable/paper-dialog-scrollable.js\");\n      import(\"@polymer/paper-button/paper-button.js\");\n      import(\"@polymer/iron-icons/iron-icons.js\");\n      import(\"@polymer/iron-icon/iron-icon.js\");\n    }, 0);\n  }\n  /**\n   * LitElement\n   */\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"opened\") {\n        this._openedChanged(this[propName]);\n      }\n    });\n  }\n  /**\n   * LitElement ready\n   */\n  firstUpdated() {\n    this.shadowRoot\n      .querySelector(\"#simple-modal-content\")\n      .addEventListener(\n        \"neon-animation-finish\",\n        this._ironOverlayClosed.bind(this)\n      );\n  }\n  /**\n   * HTMLElement\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    setTimeout(() => {\n      window.addEventListener(\"simple-modal-hide\", this.close.bind(this));\n      window.addEventListener(\"simple-modal-show\", this.showEvent.bind(this));\n    }, 0);\n  }\n  /**\n   * HTMLElement\n   */\n  disconnectedCallback() {\n    window.removeEventListener(\"simple-modal-hide\", this.close.bind(this));\n    window.removeEventListener(\"simple-modal-show\", this.showEvent.bind(this));\n    super.disconnectedCallback();\n  }\n  /**\n   * Ensure everything is visible in what's been expanded.\n   */\n  _resizeContent(e) {\n    // fake a resize event to make contents happy\n    window.dispatchEvent(new Event(\"resize\"));\n  }\n  /**\n   * show event call to open the modal and display it's content\n   *\n   */\n  showEvent(e) {\n    // if we're already opened and we get told to open again....\n    // swap out the contents\n    if (this.opened) {\n      // wipe the slot of our modal\n      while (this.firstChild !== null) {\n        this.removeChild(this.firstChild);\n      }\n      setTimeout(() => {\n        this.show(\n          e.detail.title,\n          e.detail.elements,\n          e.detail.invokedBy,\n          e.detail.id,\n          e.detail.modalClass,\n          e.detail.styles,\n          e.detail.clone,\n          e.detail.modal\n        );\n      }, 100);\n    } else {\n      this.show(\n        e.detail.title,\n        e.detail.elements,\n        e.detail.invokedBy,\n        e.detail.id,\n        e.detail.modalClass,\n        e.detail.styles,\n        e.detail.clone,\n        e.detail.modal\n      );\n    }\n  }\n  /**\n   * Show the modal and display the material\n   */\n  show(\n    title,\n    elements,\n    invokedBy,\n    id = null,\n    modalClass = null,\n    styles = null,\n    clone = false,\n    modal = false\n  ) {\n    this.invokedBy = invokedBy;\n    this.modal = modal;\n    this.title = title;\n    let element;\n    // append element areas into the appropriate slots\n    // ensuring they are set if it wasn't previously\n    let slots = [\"header\", \"content\", \"buttons\"];\n    if (id) {\n      this.setAttribute(\"id\", id);\n    } else {\n      this.removeAttribute(\"id\");\n    }\n    this.setAttribute(\"style\", \"\");\n    if (styles) {\n      [\n        \"--simple-modal-width\",\n        \"--simple-modal-height\",\n        \"--simple-modal-min-width\",\n        \"--simple-modal-min-height\",\n        \"--simple-modal-max-width\",\n        \"--simple-modal-max-height\",\n        \"--simple-modal-titlebar-color\",\n        \"--simple-modal-titlebar-background\",\n        \"--simple-modal-header-color\",\n        \"--simple-modal-header-background\",\n        \"--simple-modal-content-container-color\",\n        \"--simple-modal-content-container-background\",\n        \"--simple-modal-buttons-color\",\n        \"--simple-modal-buttons-background\",\n        \"--simple-modal-button-color\",\n        \"--simple-modal-button-background\"\n      ].forEach(prop => {\n        this.style.setProperty(prop, styles[prop] || \"unset\");\n      });\n    }\n    if (modalClass) {\n      this.setAttribute(\"class\", modalClass);\n    } else {\n      this.removeAttribute(\"class\");\n    }\n    for (var i in slots) {\n      if (elements[slots[i]]) {\n        if (clone) {\n          element = elements[slots[i]].cloneNode(true);\n        } else {\n          element = elements[slots[i]];\n        }\n        element.setAttribute(\"slot\", slots[i]);\n        this.appendChild(element);\n      }\n    }\n    // minor delay to help the above happen prior to opening\n    setTimeout(() => {\n      this.opened = true;\n      this._resizeContent();\n    }, 100);\n  }\n  /**\n   * check state and if we should clean up on close.\n   * This keeps the DOM tiddy and allows animation to happen gracefully.\n   */\n  animationEnded(e) {\n    // wipe the slot of our modal\n    this.title = \"\";\n    while (this.firstChild !== null) {\n      this.removeChild(this.firstChild);\n    }\n    if (this.invokedBy) {\n      setTimeout(() => {\n        this.invokedBy.focus();\n      }, 500);\n    }\n  }\n  /**\n   * Close the modal and do some clean up\n   */\n  close() {\n    this.shadowRoot.querySelector(\"#dialog\").close();\n  }\n  openedChangedEvent(e) {\n    this.opened = e.detail.value;\n  }\n  // Observer opened for changes\n  _openedChanged(newValue) {\n    if (typeof newValue !== typeof undefined && !newValue) {\n      this.animationEnded();\n      const evt = new CustomEvent(\"simple-modal-closed\", {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          opened: false,\n          invokedBy: this.invokedBy\n        }\n      });\n      this.dispatchEvent(evt);\n    } else if (newValue) {\n      const evt = new CustomEvent(\"simple-modal-opened\", {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          opened: true,\n          invokedBy: this.invokedBy\n        }\n      });\n      this.dispatchEvent(evt);\n    }\n  }\n  /**\n   * If there is a title, aria-labelledby should point to #simple-modal-title\n   */\n  _getAriaLabelledby(title) {\n    return !title ? null : \"simple-modal-title\";\n  }\n  /**\n   * If there is no title, supply a generic aria-label\n   */\n  _getAriaLabel(title) {\n    return !title ? \"Modal Dialog\" : null;\n  }\n  _ironOverlayClosed(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n}\nwindow.customElements.define(SimpleModal.tag, SimpleModal);\nexport { SimpleModal };\n\n// register globally so we can make sure there is only one\nwindow.SimpleModal = window.SimpleModal || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same modal\nwindow.SimpleModal.requestAvailability = () => {\n  if (!window.SimpleModal.instance) {\n    window.SimpleModal.instance = document.createElement(\"simple-modal\");\n    document.body.appendChild(window.SimpleModal.instance);\n  }\n  return window.SimpleModal.instance;\n};\n"],"names":["SimpleModal","title","opened","closeLabel","closeIcon","modal","setTimeout","LitElement","html","this","_getAriaLabel","_getAriaLabelledby","openedChangedEvent","css","String","Boolean","Object","changedProperties","forEach","oldValue","propName","_this2","_openedChanged","shadowRoot","querySelector","addEventListener","_ironOverlayClosed","bind","window","_this3","close","showEvent","removeEventListener","e","dispatchEvent","Event","firstChild","removeChild","_this4","show","detail","elements","invokedBy","id","modalClass","styles","clone","element","slots","i","setAttribute","removeAttribute","prop","_this5","style","setProperty","cloneNode","appendChild","_resizeContent","_this6","focus","value","newValue","_typeof","evt","CustomEvent","bubbles","cancelable","animationEnded","preventDefault","stopPropagation","customElements","define","tag","requestAvailability","instance","document","createElement","body"],"mappings":"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"}